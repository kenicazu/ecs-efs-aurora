{
  "Resources": {
    "HandsonVPC1BB2DD8D": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC"
          }
        ]
      }
    },
    "HandsonVPCPublicSubnet1Subnet7C1D8BE1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/PublicSubnet1"
          }
        ]
      }
    },
    "HandsonVPCPublicSubnet1RouteTable029E2259": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/PublicSubnet1"
          }
        ]
      }
    },
    "HandsonVPCPublicSubnet1RouteTableAssociation8B891E0E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "HandsonVPCPublicSubnet1RouteTable029E2259"
        },
        "SubnetId": {
          "Ref": "HandsonVPCPublicSubnet1Subnet7C1D8BE1"
        }
      }
    },
    "HandsonVPCPublicSubnet1DefaultRoute3F24A162": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "HandsonVPCPublicSubnet1RouteTable029E2259"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "HandsonVPCIGWCDB4F141"
        }
      },
      "DependsOn": [
        "HandsonVPCVPCGW185D8D00"
      ]
    },
    "HandsonVPCPublicSubnet2Subnet20536C06": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/PublicSubnet2"
          }
        ]
      }
    },
    "HandsonVPCPublicSubnet2RouteTable677E3DB1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/PublicSubnet2"
          }
        ]
      }
    },
    "HandsonVPCPublicSubnet2RouteTableAssociation0511275B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "HandsonVPCPublicSubnet2RouteTable677E3DB1"
        },
        "SubnetId": {
          "Ref": "HandsonVPCPublicSubnet2Subnet20536C06"
        }
      }
    },
    "HandsonVPCPublicSubnet2DefaultRouteA70EAFE7": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "HandsonVPCPublicSubnet2RouteTable677E3DB1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "HandsonVPCIGWCDB4F141"
        }
      },
      "DependsOn": [
        "HandsonVPCVPCGW185D8D00"
      ]
    },
    "HandsonVPCisolatedSubnetSubnet1Subnet87BBCF25": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolatedSubnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/isolatedSubnetSubnet1"
          }
        ]
      }
    },
    "HandsonVPCisolatedSubnetSubnet1RouteTable277529E4": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/isolatedSubnetSubnet1"
          }
        ]
      }
    },
    "HandsonVPCisolatedSubnetSubnet1RouteTableAssociation615D445E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "HandsonVPCisolatedSubnetSubnet1RouteTable277529E4"
        },
        "SubnetId": {
          "Ref": "HandsonVPCisolatedSubnetSubnet1Subnet87BBCF25"
        }
      }
    },
    "HandsonVPCisolatedSubnetSubnet2SubnetA754B2EB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolatedSubnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/isolatedSubnetSubnet2"
          }
        ]
      }
    },
    "HandsonVPCisolatedSubnetSubnet2RouteTableEF2912DE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC/isolatedSubnetSubnet2"
          }
        ]
      }
    },
    "HandsonVPCisolatedSubnetSubnet2RouteTableAssociation95256E67": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "HandsonVPCisolatedSubnetSubnet2RouteTableEF2912DE"
        },
        "SubnetId": {
          "Ref": "HandsonVPCisolatedSubnetSubnet2SubnetA754B2EB"
        }
      }
    },
    "HandsonVPCIGWCDB4F141": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkWorkshopStack/HandsonVPC"
          }
        ]
      }
    },
    "HandsonVPCVPCGW185D8D00": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        },
        "InternetGatewayId": {
          "Ref": "HandsonVPCIGWCDB4F141"
        }
      }
    },
    "AuroraClusterSubnetsF3E9E6AD": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for AuroraCluster database",
        "SubnetIds": [
          {
            "Ref": "HandsonVPCisolatedSubnetSubnet1Subnet87BBCF25"
          },
          {
            "Ref": "HandsonVPCisolatedSubnetSubnet2SubnetA754B2EB"
          }
        ]
      }
    },
    "AuroraClusterSecurityGroupD85BF9CB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        }
      }
    },
    "AuroraClusterSecurityGroupfromCdkWorkshopStackFargateServiceSecurityGroup11035A873306A225F479": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from CdkWorkshopStackFargateServiceSecurityGroup11035A87:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraClusterSecurityGroupD85BF9CB",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "FargateServiceSecurityGroup0A0E79CB",
            "GroupId"
          ]
        },
        "ToPort": 3306
      }
    },
    "AuroraClusterSecret8E4F2BC8": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\"username\":\"admin\"}"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "AuroraClusterSecretAttachmentDB8032DA": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "AuroraClusterSecret8E4F2BC8"
        },
        "TargetId": {
          "Ref": "AuroraCluster23D869C0"
        },
        "TargetType": "AWS::RDS::DBCluster"
      }
    },
    "AuroraCluster23D869C0": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "Engine": "aurora-mysql",
        "CopyTagsToSnapshot": true,
        "DatabaseName": "wordpress",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": {
          "Ref": "AuroraClusterSubnetsF3E9E6AD"
        },
        "EngineVersion": "8.0.mysql_aurora.3.02.1",
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "AuroraClusterSecret8E4F2BC8"
              },
              ":SecretString:username::}}"
            ]
          ]
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "AuroraClusterSecret8E4F2BC8"
              },
              ":SecretString:password::}}"
            ]
          ]
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "AuroraClusterSecurityGroupD85BF9CB",
              "GroupId"
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Snapshot",
      "DeletionPolicy": "Snapshot"
    },
    "AuroraClusterInstance19E8278EB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "AuroraCluster23D869C0"
        },
        "DBInstanceClass": "db.t3.medium",
        "DBSubnetGroupName": {
          "Ref": "AuroraClusterSubnetsF3E9E6AD"
        },
        "Engine": "aurora-mysql",
        "PubliclyAccessible": false
      },
      "DependsOn": [
        "HandsonVPCisolatedSubnetSubnet1RouteTableAssociation615D445E",
        "HandsonVPCisolatedSubnetSubnet2RouteTableAssociation95256E67"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "AuroraClusterInstance2FE2217C4": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "AuroraCluster23D869C0"
        },
        "DBInstanceClass": "db.t3.medium",
        "DBSubnetGroupName": {
          "Ref": "AuroraClusterSubnetsF3E9E6AD"
        },
        "Engine": "aurora-mysql",
        "PubliclyAccessible": false
      },
      "DependsOn": [
        "HandsonVPCisolatedSubnetSubnet1RouteTableAssociation615D445E",
        "HandsonVPCisolatedSubnetSubnet2RouteTableAssociation95256E67"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "WordPressCluster01D4826A": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled"
          }
        ]
      }
    },
    "WordPressClusterBE1A8DAA": {
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT"
        ],
        "Cluster": {
          "Ref": "WordPressCluster01D4826A"
        },
        "DefaultCapacityProviderStrategy": []
      }
    },
    "WordPressTaskTaskRole1AB4B97A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "WordPressTaskTaskRoleDefaultPolicy7DA786BE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AuroraClusterSecretAttachmentDB8032DA"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WordPressTaskTaskRoleDefaultPolicy7DA786BE",
        "Roles": [
          {
            "Ref": "WordPressTaskTaskRole1AB4B97A"
          }
        ]
      }
    },
    "WordPressTaskE8CFD044": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "wordpress:latest",
            "Name": "EcsWordPress",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ],
            "Secrets": [
              {
                "Name": "WORDPRESS_DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraClusterSecretAttachmentDB8032DA"
                      },
                      ":host::"
                    ]
                  ]
                }
              },
              {
                "Name": "WORDPRESS_DB_NAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraClusterSecretAttachmentDB8032DA"
                      },
                      ":dbname::"
                    ]
                  ]
                }
              },
              {
                "Name": "WORDPRESS_DB_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraClusterSecretAttachmentDB8032DA"
                      },
                      ":username::"
                    ]
                  ]
                }
              },
              {
                "Name": "WORDPRESS_DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraClusterSecretAttachmentDB8032DA"
                      },
                      ":password::"
                    ]
                  ]
                }
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "WordPressTaskExecutionRole4C6967E5",
            "Arn"
          ]
        },
        "Family": "CdkWorkshopStackWordPressTaskEE4A0196",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "WordPressTaskTaskRole1AB4B97A",
            "Arn"
          ]
        }
      }
    },
    "WordPressTaskExecutionRole4C6967E5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "WordPressTaskExecutionRoleDefaultPolicy3FFD848C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AuroraClusterSecretAttachmentDB8032DA"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WordPressTaskExecutionRoleDefaultPolicy3FFD848C",
        "Roles": [
          {
            "Ref": "WordPressTaskExecutionRole4C6967E5"
          }
        ]
      }
    },
    "FargateServiceAC2B3B85": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "WordPressCluster01D4826A"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "EcsWordPress",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "TargetGroup3D7CD9B8"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "FargateServiceSecurityGroup0A0E79CB",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "HandsonVPCPublicSubnet1Subnet7C1D8BE1"
              },
              {
                "Ref": "HandsonVPCPublicSubnet2Subnet20536C06"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "WordPressTaskE8CFD044"
        }
      },
      "DependsOn": [
        "albListener3EA0B2EF"
      ]
    },
    "FargateServiceSecurityGroup0A0E79CB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "CdkWorkshopStack/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        }
      }
    },
    "FargateServiceSecurityGroupfromCdkWorkshopStacksgforalb3321584F80AD2B6F0C": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "FargateServiceSecurityGroup0A0E79CB",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "sgforalbCA28EDB4",
            "GroupId"
          ]
        },
        "ToPort": 80
      }
    },
    "FargateServiceTaskCountTarget8CF96FEA": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 20,
        "MinCapacity": 1,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "WordPressCluster01D4826A"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "FargateServiceAC2B3B85",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      }
    },
    "FargateServiceTaskCountTargetRequestScaling7BAE812D": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "CdkWorkshopStackFargateServiceTaskCountTargetRequestScaling067D5800",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "FargateServiceTaskCountTarget8CF96FEA"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "albListener3EA0B2EF"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "albListener3EA0B2EF"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "albListener3EA0B2EF"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "TargetGroup3D7CD9B8",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 100
        }
      }
    },
    "sgforalbCA28EDB4": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "CdkWorkshopStack/sg-for-alb",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow inbound HTTP",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        }
      }
    },
    "alb8A8B13C2": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Name": "wordpress-alb",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "sgforalbCA28EDB4",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "HandsonVPCPublicSubnet1Subnet7C1D8BE1"
          },
          {
            "Ref": "HandsonVPCPublicSubnet2Subnet20536C06"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "HandsonVPCPublicSubnet1DefaultRoute3F24A162",
        "HandsonVPCPublicSubnet1RouteTableAssociation8B891E0E",
        "HandsonVPCPublicSubnet2DefaultRouteA70EAFE7",
        "HandsonVPCPublicSubnet2RouteTableAssociation0511275B"
      ]
    },
    "albListener3EA0B2EF": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroup3D7CD9B8"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "alb8A8B13C2"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "TargetGroup3D7CD9B8": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 60,
        "HealthCheckPath": "/wp-includes/images/blank.gif",
        "Matcher": {
          "HttpCode": "200"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "HandsonVPC1BB2DD8D"
        }
      }
    }
  },
  "Outputs": {
    "AlbDnsName": {
      "Value": {
        "Fn::GetAtt": [
          "alb8A8B13C2",
          "DNSName"
        ]
      }
    }
  }
}
